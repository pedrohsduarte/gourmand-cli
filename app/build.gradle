plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'tech.pedroduarte.gourmand'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {

    // CLI parsing
    implementation 'info.picocli:picocli:4.7.6'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.6'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'ch.qos.logback:logback-classic:1.5.12'

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
}

application {
    mainClass = 'tech.pedroduarte.gourmand.GourmandApplication'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.required = true
    }
}

shadowJar {
    archiveBaseName.set('gourmand')
    archiveClassifier.set('')
    archiveVersion.set('')
}

// Make the shadow JAR the default JAR
artifacts {
    archives shadowJar
}

// Generate Picocli completion script
tasks.register('generateCompletion', JavaExec) {
    mainClass = 'picocli.AutoComplete'
    classpath = sourceSets.main.runtimeClasspath
    args = [mainClass.get(), '-f', '-o', 'gourmand_completion']
}

// Custom task to run the application with sample data
tasks.register('runSample', JavaExec) {
    mainClass = application.mainClass
    classpath = sourceSets.main.runtimeClasspath
    args = ['search', '--help']
}

// Configure Java compilation
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            '-Aproject=' + project.group + '/' + project.name
    ]
}

// Configure JAR manifest
jar {
    manifest {
        attributes(
                'Main-Class': application.mainClass,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}